empty:
    config: []
    expected: []

empty_root:
    config:
        subresources: []
    expected: []

null_subresources:
    config:
        subresources: ~
    expected: []

dash_in_subresource_name:
    config:
        subresources:
            test-subresource:
                exclude: false
    expected:
        subresources:
            test-subresource:
                exclude: false

underscore_in_subresource_name:
    config:
        subresources:
            test_subresource:
                exclude: false
    expected:
        subresources:
            test_subresource:
                exclude: false

null_subresource_default_exclude:
    config:
        subresources:
            testSubresource: ~
    expected:
        subresources:
            testSubresource:
                exclude: false

exclude_false:
    config:
        subresources:
            testSubresource:
                exclude: false
    expected:
        subresources:
            testSubresource:
                exclude: false

exclude_true:
    config:
        subresources:
            testSubresource:
                exclude: true
    expected:
        subresources:
            testSubresource:
                exclude: true

empty_target_type:
    config:
        subresources:
            testSubresource:
                target_type: ""
    expected: []
    error: 'The value "" is not allowed for path "entity.subresources.testSubresource.target_type". Permissible values: "to-many", "to-one", "collection"'

invalid_target_type:
    config:
        subresources:
            testSubresource:
                target_type: test
    expected: []
    error: 'The value "test" is not allowed for path "entity.subresources.testSubresource.target_type". Permissible values: "to-many", "to-one", "collection"'

to_one_target_type:
    config:
        subresources:
            testSubresource:
                target_type: to-one
    expected:
        subresources:
            testSubresource:
                target_type: to-one

to_many_target_type:
    config:
        subresources:
            testSubresource:
                target_type: to-many
    expected:
        subresources:
            testSubresource:
                target_type: to-many

collection_target_type:
    config:
        subresources:
            testSubresource:
                target_type: collection
    expected:
        subresources:
            testSubresource:
                target_type: to-many

target_class_without_target_type:
    config:
        subresources:
            testSubresource:
                target_class: Test\Class
    expected:
        subresources:
            testSubresource:
                target_class: Test\Class

target_class_with_target_type_to_one:
    config:
        subresources:
            testSubresource:
                target_class: Test\Class
                target_type: to-one
    expected:
        subresources:
            testSubresource:
                target_class: Test\Class
                target_type: to-one

target_class_with_target_type_to_many:
    config:
        subresources:
            testSubresource:
                target_class: Test\Class
                target_type: to-many
    expected:
        subresources:
            testSubresource:
                target_class: Test\Class
                target_type: to-many

target_class_with_target_type_collection:
    config:
        subresources:
            testSubresource:
                target_class: Test\Class
                target_type: collection
    expected:
        subresources:
            testSubresource:
                target_class: Test\Class
                target_type: to-many

invalid_subresource_definition:
    config:
        subresources:
            testSubresource:
                invalidOption:
                    exclude: true
    expected: []
    error: 'Unrecognized option "invalidOption" under "entity.subresources.testSubresource"'

invalid_exclude_type:
    config:
        subresources:
            testSubresource:
                exclude: test
    expected: []
    error: 'Invalid type for path "entity.subresources.testSubresource.exclude". Expected "bool", but got "string".'

unknown_property:
    config:
        subresources:
            testSubresource:
                test: test
    expected: []
    error: 'Unrecognized option "test" under "entity.subresources.testSubresource"'

null_actions:
    config:
        subresources:
            testSubresource:
                actions: ~
    expected:
        subresources:
            testSubresource: []

null_action_default_exclude:
    config:
        subresources:
            testSubresource:
                actions:
                    delete: ~
    expected:
        subresources:
            testSubresource:
                actions:
                    delete:
                        exclude: false

action_exclude_false:
    config:
        subresources:
            testSubresource:
                actions:
                    delete:
                        exclude: false
    expected:
        subresources:
            testSubresource:
                actions:
                    delete:
                        exclude: false

action_exclude_true:
    config:
        subresources:
            testSubresource:
                actions:
                    delete:
                        exclude: true
    expected:
        subresources:
            testSubresource:
                actions:
                    delete:
                        exclude: true

action_null_acl_resource:
    config:
        subresources:
            testSubresource:
                actions:
                    delete:
                        acl_resource: ~
    expected:
        subresources:
            testSubresource:
                actions:
                    delete:
                        acl_resource: ~

action_null_acl_resource_and_null_exclude:
    config:
        subresources:
            testSubresource:
                actions:
                    delete:
                        exclude: ~
                        acl_resource: ~
    expected:
        subresources:
            testSubresource:
                actions:
                    delete:
                        exclude: true
                        acl_resource: ~

action_acl_resource_and_exclude:
    config:
        subresources:
            testSubresource:
                actions:
                    delete:
                        exclude: true
                        acl_resource: test_acl_resource
    expected:
        subresources:
            testSubresource:
                actions:
                    delete:
                        exclude: true
                        acl_resource: test_acl_resource

invalid_actions_definition:
    config:
        subresources:
            testSubresource:
                actions:
                    delete:
                        delete:
                            exclude: true
                            acl_resource: test_acl_resource
    expected: []
    error: 'Unrecognized option "delete" under "entity.subresources.testSubresource.actions.delete"'

invalid_actions_definition_exclude_flag_type:
    config:
        subresources:
            testSubresource:
                actions:
                    delete:
                        exclude: test
    expected: []
    error: 'Invalid type for path "entity.subresources.testSubresource.actions.delete.exclude". Expected "bool", but got "string".'

invalid_actions_definition_unknown_property:
    config:
        subresources:
            testSubresource:
                actions:
                    delete:
                        test: test
    expected: []
    error: 'Unrecognized option "test" under "entity.subresources.testSubresource.actions.delete"'

default_page_size:
    config:
        subresources:
            testSubresource:
                actions:
                    get_list:
                        page_size: ~
    expected: []
    error: 'Invalid type for path "entity.subresources.testSubresource.actions.get_list.page_size". Expected "int", but got "null".'

disable_pagination:
    config:
        subresources:
            testSubresource:
                actions:
                    get_list:
                        page_size: -1
    expected:
        subresources:
            testSubresource:
                actions:
                    get_list:
                        page_size: -1
                        max_results: -1

disable_pagination_but_custom_max_results:
    config:
        subresources:
            testSubresource:
                actions:
                    get_list:
                        page_size: -1
                        max_results: 100
    expected:
        subresources:
            testSubresource:
                actions:
                    get_list:
                        page_size: -1
                        max_results: 100

invalid_page_size:
    config:
        subresources:
            testSubresource:
                actions:
                    get_list:
                        page_size: -2
    expected: []
    error: 'The value -2 is too small for path "entity.subresources.testSubresource.actions.get_list.page_size". Should be greater than or equal to -1'

empty_order_by:
    config:
        subresources:
            testSubresource:
                actions:
                    get_list:
                        order_by: []
    expected:
        subresources:
            testSubresource:
                actions:
                    get_list: []

order_by:
    config:
        subresources:
            testSubresource:
                actions:
                    get_list:
                        order_by:
                            field1: ASC
                            field2: DESC
    expected:
        subresources:
            testSubresource:
                actions:
                    get_list:
                        order_by:
                            field1: ASC
                            field2: DESC

invalid_direction_in_order_by:
    config:
        subresources:
            testSubresource:
                actions:
                    get_list:
                        order_by:
                            field1: other
    expected: []
    error: 'The value "other" is not allowed for path "entity.subresources.testSubresource.actions.get_list.order_by.field1". Permissible values: "ASC", "DESC"'

enable_sorting:
    config:
        subresources:
            testSubresource:
                actions:
                    get_list:
                        disable_sorting: false
    expected:
        subresources:
            testSubresource:
                actions:
                    get_list:
                        disable_sorting: false

disable_sorting:
    config:
        subresources:
            testSubresource:
                actions:
                    get_list:
                        disable_sorting: true
    expected:
        subresources:
            testSubresource:
                actions:
                    get_list:
                        disable_sorting: true

invalid_value_for_disable_sorting:
    config:
        subresources:
            testSubresource:
                actions:
                    get_list:
                        disable_sorting: 123
    expected: []
    error: 'Invalid type for path "entity.subresources.testSubresource.actions.get_list.disable_sorting". Expected "bool", but got "int"'

enable_inclusion:
    config:
        subresources:
            testSubresource:
                actions:
                    get_list:
                        disable_inclusion: false
    expected:
        subresources:
            testSubresource:
                actions:
                    get_list:
                        disable_inclusion: false

disable_inclusion:
    config:
        subresources:
            testSubresource:
                actions:
                    get_list:
                        disable_inclusion: true
    expected:
        subresources:
            testSubresource:
                actions:
                    get_list:
                        disable_inclusion: true

invalid_value_for_disable_inclusion:
    config:
        subresources:
            testSubresource:
                actions:
                    get_list:
                        disable_inclusion: 123
    expected: []
    error: 'Invalid type for path "entity.subresources.testSubresource.actions.get_list.disable_inclusion". Expected "bool", but got "int"'

enable_fieldset:
    config:
        subresources:
            testSubresource:
                actions:
                    get_list:
                        disable_fieldset: false
    expected:
        subresources:
            testSubresource:
                actions:
                    get_list:
                        disable_fieldset: false

disable_fieldset:
    config:
        subresources:
            testSubresource:
                actions:
                    get_list:
                        disable_fieldset: true
    expected:
        subresources:
            testSubresource:
                actions:
                    get_list:
                        disable_fieldset: true

invalid_value_for_disable_fieldset:
    config:
        subresources:
            testSubresource:
                actions:
                    get_list:
                        disable_fieldset: 123
    expected: []
    error: 'Invalid type for path "entity.subresources.testSubresource.actions.get_list.disable_fieldset". Expected "bool", but got "int"'

enable_meta_properties:
    config:
        subresources:
            testSubresource:
                actions:
                    get_list:
                        disable_meta_properties: false
    expected:
        subresources:
            testSubresource:
                actions:
                    get_list:
                        disable_meta_properties: [false]

disable_meta_properties:
    config:
        subresources:
            testSubresource:
                actions:
                    get_list:
                        disable_meta_properties: true
    expected:
        subresources:
            testSubresource:
                actions:
                    get_list:
                        disable_meta_properties: [true]

disable_specified_meta_properties:
    config:
        subresources:
            testSubresource:
                actions:
                    get_list:
                        disable_meta_properties: [ prop1, prop2 ]
    expected:
        subresources:
            testSubresource:
                actions:
                    get_list:
                        disable_meta_properties: [ prop1, prop2 ]

invalid_value_for_disable_meta_properties:
    config:
        subresources:
            testSubresource:
                actions:
                    get_list:
                        disable_meta_properties: 123
    expected: []
    error: 'Invalid type for path "entity.subresources.testSubresource.actions.get_list.disable_meta_properties". Expected "array", but got "int"'

null_status_codes:
    config:
        subresources:
            testSubresource:
                actions:
                    get:
                        status_codes: ~
    expected:
        subresources:
            testSubresource:
                actions:
                    get: []

empty_status_codes:
    config:
        subresources:
            testSubresource:
                actions:
                    get:
                        status_codes: []
    expected:
        subresources:
            testSubresource:
                actions:
                    get: []

add_status_codes_short_syntax:
    config:
        subresources:
            testSubresource:
                actions:
                    get:
                        status_codes:
                            '417': 'Returned when expectations failed'
    expected:
        subresources:
            testSubresource:
                actions:
                    get:
                        status_codes:
                            '417':
                                description: 'Returned when expectations failed'

add_status_codes_full_syntax:
    config:
        subresources:
            testSubresource:
                actions:
                    get:
                        status_codes:
                            '417':
                                description: 'Returned when expectations failed'
    expected:
        subresources:
            testSubresource:
                actions:
                    get:
                        status_codes:
                            '417':
                                description: 'Returned when expectations failed'

delete_status_codes_short_syntax:
    config:
        subresources:
            testSubresource:
                actions:
                    get:
                        status_codes:
                            '417': false
    expected:
        subresources:
            testSubresource:
                actions:
                    get:
                        status_codes:
                            '417':
                                exclude: true

delete_status_codes_full_syntax:
    config:
        subresources:
            testSubresource:
                actions:
                    get:
                        status_codes:
                            '417':
                                exclude: true
    expected:
        subresources:
            testSubresource:
                actions:
                    get:
                        status_codes:
                            '417':
                                exclude: true

request_target_class_for_not_allowed_action:
    config:
        subresources:
            testSubresource:
                actions:
                    get_subresource:
                        request_target_class: Test\Entity
    expected: []
    error: 'Invalid configuration for path "entity.subresources.testSubresource.actions": The "request_target_class" option is not allowed for the "get_subresource" action. This option is allowed for the following actions: "update_subresource", "add_subresource", "delete_subresource".'

request_target_class:
    config:
        subresources:
            testSubresource:
                actions:
                    update_subresource:
                        request_target_class: Test\Entity1
                    add_subresource:
                        request_target_class: Test\Entity2
                    delete_subresource:
                        request_target_class: Test\Entity3
    expected:
        subresources:
            testSubresource:
                actions:
                    update_subresource:
                        request_target_class: Test\Entity1
                    add_subresource:
                        request_target_class: Test\Entity2
                    delete_subresource:
                        request_target_class: Test\Entity3

actions:
    config:
        subresources:
            testSubresource:
                actions:
                    create:
                        exclude: true
                        acl_resource: create_acl_resource
                    get:
                        exclude: false
                        acl_resource: view_acl_resource
                    delete:
                        acl_resource: delete_acl_resource
                    update: ~
    expected:
        subresources:
            testSubresource:
                actions:
                    create:
                        exclude: true
                        acl_resource: create_acl_resource
                    get:
                        exclude: false
                        acl_resource: view_acl_resource
                    delete:
                        acl_resource: delete_acl_resource
                    update:
                        exclude: false

action_field_exclude:
    config:
        subresources:
            testSubresource:
                actions:
                    create:
                        fields:
                            field1:
                                exclude: true
                            field2:
                                exclude: false
                            field3:
                                exclude: ~
    expected:
        subresources:
            testSubresource:
                actions:
                    create:
                        fields:
                            field1:
                                exclude: true
                            field2:
                                exclude: false
                            field3:
                                exclude: true

action_invalid_field_exclude:
    config:
        subresources:
            testSubresource:
                actions:
                    create:
                        fields:
                            field1:
                                exclude: 123
    expected: []
    error: 'Invalid type for path "entity.subresources.testSubresource.actions.create.fields.field1.exclude". Expected "bool", but got "int".'

action_null_form_type:
    config:
        subresources:
            testSubresource:
                actions:
                    create:
                        form_type: ~
    expected:
        subresources:
            testSubresource:
                actions:
                    create: []

action_empty_form_type:
    config:
        subresources:
            testSubresource:
                actions:
                    create:
                        form_type: ""
    expected:
        subresources:
            testSubresource:
                actions:
                    create: []

action_form_type:
    config:
        subresources:
            testSubresource:
                actions:
                    create:
                        form_type: Symfony\Component\Form\Extension\Core\Type\IntegerType
    expected:
        subresources:
            testSubresource:
                actions:
                    create:
                        form_type: Symfony\Component\Form\Extension\Core\Type\IntegerType

action_null_form_options:
    config:
        subresources:
            testSubresource:
                actions:
                    create:
                        form_options: ~
    expected:
        subresources:
            testSubresource:
                actions:
                    create: []

action_empty_form_options:
    config:
        subresources:
            testSubresource:
                actions:
                    create:
                        form_options: []
    expected:
        subresources:
            testSubresource:
                actions:
                    create: []

action_form:
    config:
        subresources:
            testSubresource:
                actions:
                    create:
                        form_type: Symfony\Component\Form\Extension\Core\Type\IntegerType
                        form_options:
                            option1: value1
    expected:
        subresources:
            testSubresource:
                actions:
                    create:
                        form_type: Symfony\Component\Form\Extension\Core\Type\IntegerType
                        form_options:
                            option1: value1

action_invalid_form_type:
    config:
        subresources:
            testSubresource:
                actions:
                    create:
                        form_type: []
    expected: []
    error: 'Invalid type for path "entity.subresources.testSubresource.actions.create.form_type". Expected "scalar", but got "array".'

action_invalid_form_options:
    config:
        subresources:
            testSubresource:
                actions:
                    create:
                        form_options: test
    expected: []
    error: 'Invalid type for path "entity.subresources.testSubresource.actions.create.form_options". Expected "array", but got "string"'

action_field_dash_in_field_name:
    config:
        subresources:
            testSubresource:
                actions:
                    create:
                        fields:
                            test-field: ~
    expected:
        subresources:
            testSubresource:
                actions:
                    create:
                        fields:
                            test-field: []

action_field_form:
    config:
        subresources:
            testSubresource:
                actions:
                    create:
                        fields:
                            field1:
                                form_type: ~
                            field2:
                                form_type: ""
                            field3:
                                form_type: Symfony\Component\Form\Extension\Core\Type\IntegerType
                            field4:
                                form_type: Symfony\Component\Form\Extension\Core\Type\IntegerType
                                form_options: ~
                            field5:
                                form_type: Symfony\Component\Form\Extension\Core\Type\IntegerType
                                form_options: []
                            field6:
                                form_type: Symfony\Component\Form\Extension\Core\Type\IntegerType
                                form_options:
                                    option1: value1
                            field7:
                                post_processor: test
                                post_processor_options: ~
                            field8:
                                post_processor: test
                                post_processor_options: []
                            field9:
                                post_processor: test
                                post_processor_options:
                                    option1: value1
    expected:
        subresources:
            testSubresource:
                actions:
                    create:
                        fields:
                            field1: []
                            field2: []
                            field3:
                                form_type: Symfony\Component\Form\Extension\Core\Type\IntegerType
                            field4:
                                form_type: Symfony\Component\Form\Extension\Core\Type\IntegerType
                            field5:
                                form_type: Symfony\Component\Form\Extension\Core\Type\IntegerType
                            field6:
                                form_type: Symfony\Component\Form\Extension\Core\Type\IntegerType
                                form_options:
                                    option1: value1
                            field7:
                                post_processor: test
                            field8:
                                post_processor: test
                            field9:
                                post_processor: test
                                post_processor_options:
                                    option1: value1

action_invalid_field_form_type:
    config:
        subresources:
            testSubresource:
                actions:
                    create:
                        fields:
                            field1:
                                form_type: []
    expected: []
    error: 'Invalid type for path "entity.subresources.testSubresource.actions.create.fields.field1.form_type". Expected "scalar", but got "array".'

action_invalid_field_form_options:
    config:
        subresources:
            testSubresource:
                actions:
                    create:
                        fields:
                            field1:
                                form_options: test
    expected: []
    error: 'Invalid type for path "entity.subresources.testSubresource.actions.create.fields.field1.form_options". Expected "array", but got "string"'

invalid_field_post_processor:
    config:
        subresources:
            testSubresource:
                actions:
                    create:
                        fields:
                            field1:
                                post_processor: []
    expected: []
    error: 'Invalid type for path "entity.subresources.testSubresource.actions.create.fields.field1.post_processor". Expected "scalar", but got "array".'

unknown_field_post_processor:
    config:
        subresources:
            testSubresource:
                actions:
                    create:
                        fields:
                            field1:
                                post_processor: another
    expected: []
    error: 'Invalid configuration for path "entity.subresources.testSubresource.actions.create.fields.field1": The post processor "another" is unknown. Known post processors: "twig, test".'

invalid_field_post_processor_options:
    config:
        subresources:
            testSubresource:
                actions:
                    create:
                        fields:
                            field1:
                                post_processor_options: test
    expected: []
    error: 'Invalid type for path "entity.subresources.testSubresource.actions.create.fields.field1.post_processor_options". Expected "array", but got "string"'

twig_field_post_processor_without_options:
    config:
        subresources:
            testSubresource:
                actions:
                    create:
                        fields:
                            field1:
                                post_processor: twig
    expected: []
    error: 'Invalid configuration for path "entity.subresources.testSubresource.actions.create.fields.field1": The "template" option is required for the "twig" post processor. Add it to the "post_processor_options".'

twig_field_post_processor_without_template:
    config:
        subresources:
            testSubresource:
                actions:
                    create:
                        fields:
                            field1:
                                post_processor: twig
                                post_processor_options:
                                    option1: value1
    expected: []
    error: 'Invalid configuration for path "entity.subresources.testSubresource.actions.create.fields.field1": The "template" option is required for the "twig" post processor. Add it to the "post_processor_options".'

empty_filters:
    config:
        subresources:
            testSubresource:
                filters: []
    expected:
        subresources:
            testSubresource: []

null_filters_fields:
    config:
        subresources:
            testSubresource:
                filters:
                    fields: ~
    expected:
        subresources:
            testSubresource: []

empty_filters_fields:
    config:
        subresources:
            testSubresource:
                filters:
                    fields: []
    expected:
        subresources:
            testSubresource: []

default_filters_exclusion_policy:
    config:
        subresources:
            testSubresource:
                filters:
                    exclusion_policy: none
    expected:
        subresources:
            testSubresource:
                filters:
                    exclusion_policy: none

filters_exclusion_policy:
    config:
        subresources:
            testSubresource:
                filters:
                    exclusion_policy: all
    expected:
        subresources:
            testSubresource:
                filters:
                    exclusion_policy: all

null_filters_exclusion_policy:
    config:
        subresources:
            testSubresource:
                filters:
                    exclusion_policy: null
    expected: []
    error: 'The value null is not allowed for path "entity.subresources.testSubresource.filters.exclusion_policy". Permissible values: "all", "none"'

invalid_filters_exclusion_policy:
    config:
        subresources:
            testSubresource:
                filters:
                    exclusion_policy: invalid
    expected: []
    error: 'The value "invalid" is not allowed for path "entity.subresources.testSubresource.filters.exclusion_policy". Permissible values: "all", "none"'

dash_in_filters_field_name:
    config:
        subresources:
            testSubresource:
                filters:
                    fields:
                        test-field: ~
    expected:
        subresources:
            testSubresource:
                filters:
                    fields:
                        test-field: []

filters:
    config:
        subresources:
            testSubresource:
                filters:
                    exclusion_policy: all
                    fields:
                        field1: ~
                        field2: []
                        field3:
                            exclude: true
                            property_path: path1
                            data_type: string
                            allow_array: true
                            allow_range: true
                            description: description1
                            operators: ['=', '!=', 'exists']
                        field4:
                            exclude: false
                        field5:
                            allow_array: false
                        field6:
                            allow_range: false
    expected:
        subresources:
            testSubresource:
                filters:
                    exclusion_policy: all
                    fields:
                        field1: []
                        field2: []
                        field3:
                            exclude: true
                            property_path: path1
                            data_type: string
                            allow_array: true
                            allow_range: true
                            description: description1
                            operators: ['eq', 'neq', 'exists']
                        field4:
                            exclude: false
                        field5:
                            allow_array: false
                        field6:
                            allow_range: false

invalid_filters_field_exclude:
    config:
        subresources:
            testSubresource:
                filters:
                    fields:
                        field1:
                            exclude: 123
    expected: []
    error: 'Invalid type for path "entity.subresources.testSubresource.filters.fields.field1.exclude". Expected "bool", but got "int".'

null_filters_field_property_path:
    config:
        subresources:
            testSubresource:
                filters:
                    fields:
                        field1:
                            property_path: null
    expected: []
    error: 'The path "entity.subresources.testSubresource.filters.fields.field1.property_path" cannot contain an empty value, but got null.'

null_filters_field_data_type:
    config:
        subresources:
            testSubresource:
                filters:
                    fields:
                        field1:
                            data_type: null
    expected: []
    error: 'The path "entity.subresources.testSubresource.filters.fields.field1.data_type" cannot contain an empty value, but got null.'

invalid_filters_field_allow_array:
    config:
        subresources:
            testSubresource:
                filters:
                    fields:
                        field1:
                            allow_array: 123
    expected: []
    error: 'Invalid type for path "entity.subresources.testSubresource.filters.fields.field1.allow_array". Expected "bool", but got "int".'

invalid_filters_field_allow_range:
    config:
        subresources:
            testSubresource:
                filters:
                    fields:
                        field1:
                            allow_range: 123
    expected: []
    error: 'Invalid type for path "entity.subresources.testSubresource.filters.fields.field1.allow_range". Expected "bool", but got "int".'

null_filters_field_description:
    config:
        subresources:
            testSubresource:
                filters:
                    fields:
                        field1:
                            description: null
    expected: []
    error: 'The path "entity.subresources.testSubresource.filters.fields.field1.description" cannot contain an empty value, but got null.'

empty_filters_field_description:
    config:
        subresources:
            testSubresource:
                filters:
                    fields:
                        field1:
                            description: ""
    expected: []
    error: 'The path "entity.subresources.testSubresource.filters.fields.field1.description" cannot contain an empty value, but got "".'

empty_sorters:
    config:
        subresources:
            testSubresource:
                sorters: []
    expected:
        subresources:
            testSubresource: []

null_sorters_fields:
    config:
        subresources:
            testSubresource:
                sorters:
                    fields: ~
    expected:
        subresources:
            testSubresource: []

empty_sorters_fields:
    config:
        subresources:
            testSubresource:
                sorters:
                    fields: []
    expected:
        subresources:
            testSubresource: []

default_sorters_exclusion_policy:
    config:
        subresources:
            testSubresource:
                sorters:
                    exclusion_policy: none
    expected:
        subresources:
            testSubresource:
                sorters:
                    exclusion_policy: none

sorters_exclusion_policy:
    config:
        subresources:
            testSubresource:
                sorters:
                    exclusion_policy: all
    expected:
        subresources:
            testSubresource:
                sorters:
                    exclusion_policy: all

null_sorters_exclusion_policy:
    config:
        subresources:
            testSubresource:
                sorters:
                    exclusion_policy: null
    expected: []
    error: 'The value null is not allowed for path "entity.subresources.testSubresource.sorters.exclusion_policy". Permissible values: "all", "none"'

invalid_sorters_exclusion_policy:
    config:
        subresources:
            testSubresource:
                sorters:
                    exclusion_policy: invalid
    expected: []
    error: 'The value "invalid" is not allowed for path "entity.subresources.testSubresource.sorters.exclusion_policy". Permissible values: "all", "none"'

dash_in_sorters_field_name:
    config:
        subresources:
            testSubresource:
                sorters:
                    fields:
                        test-field: ~
    expected:
        subresources:
            testSubresource:
                sorters:
                    fields:
                        test-field: []

sorters:
    config:
        subresources:
            testSubresource:
                sorters:
                    exclusion_policy: all
                    fields:
                        field1: ~
                        field2: []
                        field3:
                            exclude: true
                            property_path: path1
                        field4:
                            exclude: false
    expected:
        subresources:
            testSubresource:
                sorters:
                    exclusion_policy: all
                    fields:
                        field1: []
                        field2: []
                        field3:
                            exclude: true
                            property_path: path1
                        field4:
                            exclude: false

invalid_sorters_field_exclude:
    config:
        subresources:
            testSubresource:
                sorters:
                    fields:
                        field1:
                            exclude: 123
    expected: []
    error: 'Invalid type for path "entity.subresources.testSubresource.sorters.fields.field1.exclude". Expected "bool", but got "int".'

null_sorters_field_property_path:
    config:
        subresources:
            testSubresource:
                sorters:
                    fields:
                        field1:
                            property_path: null
    expected: []
    error: 'The path "entity.subresources.testSubresource.sorters.fields.field1.property_path" cannot contain an empty value, but got null.'
